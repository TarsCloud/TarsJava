// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.7.2.
// **********************************************************************

package com.qq.tars.support.query.prx;

import com.qq.tars.client.subset.SubsetConf;
import com.qq.tars.common.support.Holder;
import com.qq.tars.protocol.annotation.Servant;
import com.qq.tars.protocol.tars.annotation.TarsCallback;
import com.qq.tars.protocol.tars.annotation.TarsContext;
import com.qq.tars.protocol.tars.annotation.TarsHolder;
import com.qq.tars.protocol.tars.annotation.TarsMethodParameter;
import com.qq.tars.support.query.prx.QueryFPrxCallback;

import java.util.List;
import java.util.concurrent.CompletableFuture;

/**
 * Get the query interface of the object endpoint
 */
@Servant
public interface QueryFPrx {
	/** Get object by id
	 *
	 * @param id Object name
	 *
	 * @return  Returns a list of all active endpoints for this object
	 */
	 java.util.List<EndpointF> findObjectById(@TarsMethodParameter(name="id")String id);
	/** Get object by id
	 *
	 * @param id Object name
	 *
	 * @return  Returns a list of all active endpoints for this object
	 */
	 java.util.List<EndpointF> findObjectById(@TarsMethodParameter(name="id")String id, @TarsContext java.util.Map<String, String> ctx);
	/** Get object by id
	 *
	 * @param id Object name
	 *
	 * @return  Returns a list of all active endpoints for this object
	 */
	 void async_findObjectById(@TarsCallback QueryFPrxCallback callback, @TarsMethodParameter(name="id")String id);
	/** Get object by id
	 *
	 * @param id Object name
	 *
	 * @return  Returns a list of all active endpoints for this object
	 */
	 void async_findObjectById(@TarsCallback QueryFPrxCallback callback, @TarsMethodParameter(name="id")String id, @TarsContext java.util.Map<String, String> ctx);
	/** Get object by id
	 *
	 * @param id Object name
	 *
	 * @return  Returns a list of all active endpoints for this object
	 */
	 CompletableFuture<List<EndpointF>> promise_findObjectById(@TarsMethodParameter(name="id")String id);
	/** Get object by id
	 *
	 * @param id Object name
	 *
	 * @return  Returns a list of all active endpoints for this object
	 */
	 CompletableFuture<java.util.List<EndpointF>>  promise_findObjectById(@TarsMethodParameter(name="id")String id, @TarsContext java.util.Map<String, String> ctx);
	/**Get all objects by id, including active and inactive objects
	 *
	 * @param id         Object name
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 int findObjectById4Any(@TarsMethodParameter(name="id")String id, @TarsHolder(name="activeEp") Holder<java.util.List<EndpointF>> activeEp, @TarsHolder(name="inactiveEp") Holder<java.util.List<EndpointF>> inactiveEp);
	/**Get all objects by id, including active and inactive objects
	 *
	 * @param id         Object name
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 int findObjectById4Any(@TarsMethodParameter(name="id")String id, @TarsHolder(name="activeEp") Holder<java.util.List<EndpointF>> activeEp, @TarsHolder(name="inactiveEp") Holder<java.util.List<EndpointF>> inactiveEp, @TarsContext java.util.Map<String, String> ctx);
	/**Get all objects by id, including active and inactive objects
	 *
	 * @param id         Object name
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 void async_findObjectById4Any(@TarsCallback QueryFPrxCallback callback, @TarsMethodParameter(name="id")String id);
	/**Get all objects by id, including active and inactive objects
	 *
	 * @param id         Object name
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 void async_findObjectById4Any(@TarsCallback QueryFPrxCallback callback, @TarsMethodParameter(name="id")String id, @TarsContext java.util.Map<String, String> ctx);
	/**Get all objects by id, including active and inactive objects
	 *
	 * @param id         Object name
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 CompletableFuture<java.lang.Integer>  promise_findObjectById4Any(@TarsMethodParameter(name="id")String id, @TarsHolder(name="activeEp") Holder<java.util.List<EndpointF>> activeEp, @TarsHolder(name="inactiveEp") Holder<java.util.List<EndpointF>> inactiveEp);
	/**Get all objects by id, including active and inactive objects
	 *
	 * @param id         Object name
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 CompletableFuture<java.lang.Integer>  promise_findObjectById4Any(@TarsMethodParameter(name="id")String id, @TarsHolder(name="activeEp") Holder<java.util.List<EndpointF>> activeEp, @TarsHolder(name="inactiveEp") Holder<java.util.List<EndpointF>> inactiveEp, @TarsContext java.util.Map<String, String> ctx);
	/** Get all endpoint lists of objects according to id, the function is the same as findObjectByIdInSameGroup
	 *
	 * @param id         Object name
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 int findObjectById4All(@TarsMethodParameter(name="id")String id, @TarsHolder(name="activeEp") Holder<java.util.List<EndpointF>> activeEp, @TarsHolder(name="inactiveEp") Holder<java.util.List<EndpointF>> inactiveEp);
	/** Get all endpoint lists of objects according to id, the function is the same as findObjectByIdInSameGroup
	 *
	 * @param id         Object name
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 int findObjectById4All(@TarsMethodParameter(name="id")String id, @TarsHolder(name="activeEp") Holder<java.util.List<EndpointF>> activeEp, @TarsHolder(name="inactiveEp") Holder<java.util.List<EndpointF>> inactiveEp, @TarsContext java.util.Map<String, String> ctx);
	/** Get all endpoint lists of objects according to id, the function is the same as findObjectByIdInSameGroup
	 *
	 * @param id         Object name
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 void async_findObjectById4All(@TarsCallback QueryFPrxCallback callback, @TarsMethodParameter(name="id")String id);
	/** Get all endpoint lists of objects according to id, the function is the same as findObjectByIdInSameGroup
	 *
	 * @param id         Object name
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 void async_findObjectById4All(@TarsCallback QueryFPrxCallback callback, @TarsMethodParameter(name="id")String id, @TarsContext java.util.Map<String, String> ctx);
	/** Get all endpoint lists of objects according to id, the function is the same as findObjectByIdInSameGroup
	 *
	 * @param id         Object name
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 CompletableFuture<java.lang.Integer>  promise_findObjectById4All(@TarsMethodParameter(name="id")String id, @TarsHolder(name="activeEp") Holder<java.util.List<EndpointF>> activeEp, @TarsHolder(name="inactiveEp") Holder<java.util.List<EndpointF>> inactiveEp);
	/** Get all endpoint lists of objects according to id, the function is the same as findObjectByIdInSameGroup
	 *
	 * @param id         Object name
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 CompletableFuture<java.lang.Integer>  promise_findObjectById4All(@TarsMethodParameter(name="id")String id, @TarsHolder(name="activeEp") Holder<java.util.List<EndpointF>> activeEp, @TarsHolder(name="inactiveEp") Holder<java.util.List<EndpointF>> inactiveEp, @TarsContext java.util.Map<String, String> ctx);
	/** Get the same group endpoint list of objects according to id
	 *
	 * @param id         Object name
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 int findObjectByIdInSameGroup(@TarsMethodParameter(name="id")String id, @TarsHolder(name="activeEp") Holder<java.util.List<EndpointF>> activeEp, @TarsHolder(name="inactiveEp") Holder<java.util.List<EndpointF>> inactiveEp);
	/** Get the same group endpoint list of objects according to id
	 *
	 * @param id         Object name
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 int findObjectByIdInSameGroup(@TarsMethodParameter(name="id")String id, @TarsHolder(name="activeEp") Holder<java.util.List<EndpointF>> activeEp, @TarsHolder(name="inactiveEp") Holder<java.util.List<EndpointF>> inactiveEp, @TarsContext java.util.Map<String, String> ctx);
	/** Get the same group endpoint list of objects according to id
	 *
	 * @param id         Object name
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 void async_findObjectByIdInSameGroup(@TarsCallback QueryFPrxCallback callback, @TarsMethodParameter(name="id")String id);
	/** Get the same group endpoint list of objects according to id
	 *
	 * @param id         Object name
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 void async_findObjectByIdInSameGroup(@TarsCallback QueryFPrxCallback callback, @TarsMethodParameter(name="id")String id, @TarsContext java.util.Map<String, String> ctx);
	/** Get the same group endpoint list of objects according to id
	 *
	 * @param id         Object name
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 CompletableFuture<java.lang.Integer>  promise_findObjectByIdInSameGroup(@TarsMethodParameter(name="id")String id, @TarsHolder(name="activeEp") Holder<java.util.List<EndpointF>> activeEp, @TarsHolder(name="inactiveEp") Holder<java.util.List<EndpointF>> inactiveEp);
	/** Get the same group endpoint list of objects according to id
	 *
	 * @param id         Object name
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 CompletableFuture<java.lang.Integer>  promise_findObjectByIdInSameGroup(@TarsMethodParameter(name="id")String id, @TarsHolder(name="activeEp") Holder<java.util.List<EndpointF>> activeEp, @TarsHolder(name="inactiveEp") Holder<java.util.List<EndpointF>> inactiveEp, @TarsContext java.util.Map<String, String> ctx);
	/** Get the endpoint list of the specified home location of the object according to id
	 *
	 * @param id         Object name
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 int findObjectByIdInSameStation(@TarsMethodParameter(name="id")String id, @TarsMethodParameter(name="sStation")String sStation, @TarsHolder(name="activeEp") Holder<java.util.List<EndpointF>> activeEp, @TarsHolder(name="inactiveEp") Holder<java.util.List<EndpointF>> inactiveEp);
	/** Get the endpoint list of the specified home location of the object according to id
	 *
	 * @param id         Object name
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 int findObjectByIdInSameStation(@TarsMethodParameter(name="id")String id, @TarsMethodParameter(name="sStation")String sStation, @TarsHolder(name="activeEp") Holder<java.util.List<EndpointF>> activeEp, @TarsHolder(name="inactiveEp") Holder<java.util.List<EndpointF>> inactiveEp, @TarsContext java.util.Map<String, String> ctx);
	/** Get the endpoint list of the specified home location of the object according to id
	 *
	 * @param id         Object name
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 void async_findObjectByIdInSameStation(@TarsCallback QueryFPrxCallback callback, @TarsMethodParameter(name="id")String id, @TarsMethodParameter(name="sStation")String sStation);
	/** Get the endpoint list of the specified home location of the object according to id
	 *
	 * @param id         Object name
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 void async_findObjectByIdInSameStation(@TarsCallback QueryFPrxCallback callback, @TarsMethodParameter(name="id")String id, @TarsMethodParameter(name="sStation")String sStation, @TarsContext java.util.Map<String, String> ctx);
	/** Get the endpoint list of the specified home location of the object according to id
	 *
	 * @param id         Object name
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 CompletableFuture<java.lang.Integer>  promise_findObjectByIdInSameStation(@TarsMethodParameter(name="id")String id, @TarsMethodParameter(name="sStation")String sStation, @TarsHolder(name="activeEp") Holder<java.util.List<EndpointF>> activeEp, @TarsHolder(name="inactiveEp") Holder<java.util.List<EndpointF>> inactiveEp);
	/** Get the endpoint list of the specified home location of the object according to id
	 *
	 * @param id         Object name
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 CompletableFuture<java.lang.Integer>  promise_findObjectByIdInSameStation(@TarsMethodParameter(name="id")String id, @TarsMethodParameter(name="sStation")String sStation, @TarsHolder(name="activeEp") Holder<java.util.List<EndpointF>> activeEp, @TarsHolder(name="inactiveEp") Holder<java.util.List<EndpointF>> inactiveEp, @TarsContext java.util.Map<String, String> ctx);
	/** Get the same group endpoint list of objects according to id
	 *
	 * @param id         Object name
	 * @param setId      The full name of set, the format is setname.setarea.setgroup
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 int findObjectByIdInSameSet(@TarsMethodParameter(name="id")String id, @TarsMethodParameter(name="setId")String setId, @TarsHolder(name="activeEp") Holder<java.util.List<EndpointF>> activeEp, @TarsHolder(name="inactiveEp") Holder<java.util.List<EndpointF>> inactiveEp);
	/** Get the same group endpoint list of objects according to id
	 *
	 * @param id         Object name
	 * @param setId      The full name of set, the format is setname.setarea.setgroup
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 int findObjectByIdInSameSet(@TarsMethodParameter(name="id")String id, @TarsMethodParameter(name="setId")String setId, @TarsHolder(name="activeEp") Holder<java.util.List<EndpointF>> activeEp, @TarsHolder(name="inactiveEp") Holder<java.util.List<EndpointF>> inactiveEp, @TarsContext java.util.Map<String, String> ctx);
	/** Get the same group endpoint list of objects according to id
	 *
	 * @param id         Object name
	 * @param setId      The full name of set, the format is setname.setarea.setgroup
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 void async_findObjectByIdInSameSet(@TarsCallback QueryFPrxCallback callback, @TarsMethodParameter(name="id")String id, @TarsMethodParameter(name="setId")String setId);
	/** Get the same group endpoint list of objects according to id
	 *
	 * @param id         Object name
	 * @param setId      The full name of set, the format is setname.setarea.setgroup
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 void async_findObjectByIdInSameSet(@TarsCallback QueryFPrxCallback callback, @TarsMethodParameter(name="id")String id, @TarsMethodParameter(name="setId")String setId, @TarsContext java.util.Map<String, String> ctx);
	/** Get the same group endpoint list of objects according to id
	 *
	 * @param id         Object name
	 * @param setId      The full name of set, the format is setname.setarea.setgroup
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 CompletableFuture<java.lang.Integer>  promise_findObjectByIdInSameSet(@TarsMethodParameter(name="id")String id, @TarsMethodParameter(name="setId")String setId, @TarsHolder(name="activeEp") Holder<java.util.List<EndpointF>> activeEp, @TarsHolder(name="inactiveEp") Holder<java.util.List<EndpointF>> inactiveEp);
	/** Get the same group endpoint list of objects according to id
	 *
	 * @param id         Object name
	 * @param setId      The full name of set, the format is setname.setarea.setgroup
	 * @param activeEp   List of live endpoints
	 * @param inactiveEp List of non-live endpoints
	 * @return:  0-success  others-failure
	 */
	 CompletableFuture<java.lang.Integer>  promise_findObjectByIdInSameSet(@TarsMethodParameter(name="id")String id, @TarsMethodParameter(name="setId")String setId, @TarsHolder(name="activeEp") Holder<java.util.List<EndpointF>> activeEp, @TarsHolder(name="inactiveEp") Holder<java.util.List<EndpointF>> inactiveEp, @TarsContext java.util.Map<String, String> ctx);
	/** 获取subset信息
	 *
	 * @param id         对象名称
	 * @param conf       Subset配置信息
	 * @return:  0-成功  others-失败
	 */
	 int findSubsetConfigById(@TarsMethodParameter(name="id")String id, @TarsHolder(name="conf") Holder<com.qq.tars.client.subset.SubsetConf> conf);
	/** 获取subset信息
	 *
	 * @param id         对象名称
	 * @param conf       Subset配置信息
	 * @return:  0-成功  others-失败
	 */
	 int findSubsetConfigById(@TarsMethodParameter(name="id")String id, @TarsHolder(name="conf") Holder<com.qq.tars.client.subset.SubsetConf> conf, @TarsContext java.util.Map<String, String> ctx);
	/** 获取subset信息
	 *
	 * @param id         对象名称
	 * @param conf       Subset配置信息
	 * @return:  0-成功  others-失败
	 */
	 void async_findSubsetConfigById(@TarsCallback QueryFPrxCallback callback, @TarsMethodParameter(name="id")String id);
	/** 获取subset信息
	 *
	 * @param id         对象名称
	 * @param conf       Subset配置信息
	 * @return:  0-成功  others-失败
	 */
	 void async_findSubsetConfigById(@TarsCallback QueryFPrxCallback callback, @TarsMethodParameter(name="id")String id, @TarsContext java.util.Map<String, String> ctx);
	/** 获取subset信息
	 *
	 * @param id         对象名称
	 * @param conf       Subset配置信息
	 * @return:  0-成功  others-失败
	 */
	 CompletableFuture<java.lang.Integer>  promise_findSubsetConfigById(@TarsMethodParameter(name="id")String id, @TarsHolder(name="conf") Holder<com.qq.tars.client.subset.SubsetConf> conf);
	/** 获取subset信息
	 *
	 * @param id         对象名称
	 * @param conf       Subset配置信息
	 * @return:  0-成功  others-失败
	 */
	 CompletableFuture<java.lang.Integer>  promise_findSubsetConfigById(@TarsMethodParameter(name="id")String id, @TarsHolder(name="conf")Holder<com.qq.tars.client.subset.SubsetConf> conf, @TarsContext java.util.Map<String, String> ctx);
}

