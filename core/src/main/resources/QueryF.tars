/**
 * Tencent is pleased to support the open source community by making Tars available.
 *
 * Copyright (C) 2016 THL A29 Limited, a Tencent company. All rights reserved.
 *
 * Licensed under the BSD 3-Clause License (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * https://opensource.org/licenses/BSD-3-Clause
 *
 * Unless required by applicable law or agreed to in writing, software distributed
 * under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */

#include "EndpointF.tars"

module tars
{
    /**
     * Get the query interface of the object endpoint
     */

    interface QueryF
    {
        /** Get object by id
         *
         * @param id Object name
         *
         * @return  Returns a list of all active endpoints for this object
         */
        vector<EndpointF> findObjectById(string id);

        /**Get all objects by id, including active and inactive objects
         *
         * @param id         Object name
         * @param activeEp   List of live endpoints
         * @param inactiveEp List of non-live endpoints
         * @return:  0-success  others-failure
         */
        int findObjectById4Any(string id, out vector<EndpointF> activeEp, out vector<EndpointF> inactiveEp);

        /** Get all endpoint lists of objects according to id, the function is the same as findObjectByIdInSameGroup
         *
         * @param id         Object name
         * @param activeEp   List of live endpoints
         * @param inactiveEp List of non-live endpoints
         * @return:  0-success  others-failure
         */
        int findObjectById4All(string id, out vector<EndpointF> activeEp, out vector<EndpointF> inactiveEp);

        /** Get the same group endpoint list of objects according to id
         *
         * @param id         Object name
         * @param activeEp   List of live endpoints
         * @param inactiveEp List of non-live endpoints
         * @return:  0-success  others-failure
         */
        int findObjectByIdInSameGroup(string id, out vector<EndpointF> activeEp, out vector<EndpointF> inactiveEp);


        /** Get the endpoint list of the specified home location of the object according to id
         *
         * @param id         Object name
         * @param activeEp   List of live endpoints
         * @param inactiveEp List of non-live endpoints
         * @return:  0-success  others-failure
         */
        int findObjectByIdInSameStation(string id, string sStation, out vector<EndpointF> activeEp, out vector<EndpointF> inactiveEp);

        /** Get the same group endpoint list of objects according to id
         *
         * @param id         Object name
         * @param setId      The full name of set, the format is setname.setarea.setgroup
         * @param activeEp   List of live endpoints
         * @param inactiveEp List of non-live endpoints
         * @return:  0-success  others-failure
         */
        int findObjectByIdInSameSet(string id, string setId, out vector<EndpointF> activeEp, out vector<EndpointF> inactiveEp);

    };

};


